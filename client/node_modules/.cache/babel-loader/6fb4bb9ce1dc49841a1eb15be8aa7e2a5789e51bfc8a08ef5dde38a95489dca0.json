{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alram\\\\CodeFiles\\\\car-vs-car--webapp\\\\client\\\\src\\\\pages\\\\compare.js\",\n  _s = $RefreshSig$();\n// src/Compare.js\nimport React, { useState } from 'react';\nimport Navbar from '../Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Compare = () => {\n  _s();\n  const [brand1, setBrand1] = useState('');\n  const [brand2, setBrand2] = useState('');\n  const [model1, setModel1] = useState('');\n  const [model2, setModel2] = useState('');\n  const [mileage1, setMileage1] = useState('');\n  const [mileage2, setMileage2] = useState('');\n  const [comparisonResult, setComparisonResult] = useState('');\n  document.addEventListener('DOMContentLoaded', function () {\n    loadCarMakes();\n  });\n  let carMakes = [];\n  async function loadCarMakes() {\n    try {\n      const response = await fetch('http://localhost:3000/api/cars');\n      const data = await response.json();\n\n      // Extract unique car makes using a Set\n      carMakes = [...new Set(data.map(car => car.make.toLowerCase()))];\n      console.log('Unique car makes loaded:', carMakes); // Debugging line\n    } catch (error) {\n      console.error('Error fetching car makes:', error);\n    }\n  }\n  function filterMakes(inputId) {\n    const input = document.getElementById(inputId);\n    const filter = input.value.toLowerCase();\n    const dropdown = document.getElementById(`dropdown${inputId.slice(-1)}`);\n    dropdown.innerHTML = '';\n    console.log('Filtering makes for:', filter); // Debugging line\n\n    // Filter car makes based on user input\n    const filteredMakes = carMakes.filter(make => make.includes(filter));\n    console.log('Filtered makes:', filteredMakes); // Debugging line\n\n    // Clear dropdown before repopulating\n    dropdown.innerHTML = '';\n\n    // Populate dropdown with filtered makes\n    filteredMakes.forEach(make => {\n      const item = document.createElement('div');\n      item.className = 'dropdown-item';\n      item.textContent = capitalizeFirstLetter(make);\n      item.onclick = () => selectMake(inputId, make);\n      dropdown.appendChild(item);\n    });\n    if (filter === '') {\n      dropdown.innerHTML = '';\n    }\n  }\n  function selectMake(inputId, makeName) {\n    document.getElementById(inputId).value = capitalizeFirstLetter(makeName);\n    document.getElementById(`dropdown${inputId.slice(-1)}`).innerHTML = '';\n  }\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  async function compareCars() {\n    const brand1 = document.getElementById('brand1').value.toLowerCase();\n    const brand2 = document.getElementById('brand2').value.toLowerCase();\n    const model1 = document.getElementById('model1').value.toLowerCase();\n    const model2 = document.getElementById('model2').value.toLowerCase();\n    const mileage1 = document.getElementById('mileage1').value;\n    const mileage2 = document.getElementById('mileage2').value;\n    try {\n      // Fetch car data\n      const response1 = await fetch(`http://localhost:3000/api/cars?make=${brand1}&model=${model1}`);\n      const response2 = await fetch(`http://localhost:3000/api/cars?make=${brand2}&model=${model2}`);\n      const data1 = await response1.json();\n      const data2 = await response2.json();\n      console.log('Car 1 data:', data1); // Debugging line\n      console.log('Car 2 data:', data2); // Debugging line\n\n      // Filter duplicates by brand and model before proceeding\n      const uniqueData1 = removeDuplicates(data1);\n      const uniqueData2 = removeDuplicates(data2);\n      if (uniqueData1.length && uniqueData2.length) {\n        const winner = compareCarData(uniqueData1[0], uniqueData2[0]);\n        displayComparison(winner, uniqueData1[0], uniqueData2[0]);\n      } else {\n        displayError(\"One or both cars were not found.\");\n      }\n    } catch (error) {\n      console.error('Error fetching car data:', error);\n      displayError(\"Error fetching car data.\");\n    }\n  }\n\n  // Helper function to remove duplicates based on make and model\n  function removeDuplicates(carArray) {\n    const seen = new Set();\n    return carArray.filter(car => {\n      const identifier = `${car.make.toLowerCase()}_${car.model.toLowerCase()}`;\n      if (seen.has(identifier)) {\n        return false;\n      } else {\n        seen.add(identifier);\n        return true;\n      }\n    });\n  }\n  function compareCarData(data1, data2) {\n    return data1.rating > data2.rating ? data1 : data2;\n  }\n  function displayComparison(winner, data1, data2) {\n    const resultDiv = document.getElementById('comparisonResult');\n    resultDiv.innerHTML = `\n        <h2>Comparison Result</h2>\n        <p>Car 1: ${data1.make} ${data1.model} - Mileage: ${data1.mileage} - Rating: ${data1.rating}</p>\n        <p>Car 2: ${data2.make} ${data2.model} - Mileage: ${data2.mileage} - Rating: ${data2.rating}</p>\n        <h3>Winner: ${winner.make} ${winner.model}</h3>\n    `;\n  }\n  function displayError(message) {\n    const resultDiv = document.getElementById('comparisonResult');\n    resultDiv.innerHTML = `<p style=\"color: red;\">${message}</p>`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Car vs. Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Car 1 Brand\",\n          value: brand1,\n          onChange: e => setBrand1(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Compare, \"U5DIgNpTfdnYxA0nAoc3lIKNntU=\");\n_c = Compare;\nexport default Compare;\nvar _c;\n$RefreshReg$(_c, \"Compare\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Compare","_s","brand1","setBrand1","brand2","setBrand2","model1","setModel1","model2","setModel2","mileage1","setMileage1","mileage2","setMileage2","comparisonResult","setComparisonResult","document","addEventListener","loadCarMakes","carMakes","response","fetch","data","json","Set","map","car","make","toLowerCase","console","log","error","filterMakes","inputId","input","getElementById","filter","value","dropdown","slice","innerHTML","filteredMakes","includes","forEach","item","createElement","className","textContent","capitalizeFirstLetter","onclick","selectMake","appendChild","makeName","string","charAt","toUpperCase","compareCars","response1","response2","data1","data2","uniqueData1","removeDuplicates","uniqueData2","length","winner","compareCarData","displayComparison","displayError","carArray","seen","identifier","model","has","add","rating","resultDiv","mileage","message","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/alram/CodeFiles/car-vs-car--webapp/client/src/pages/compare.js"],"sourcesContent":["// src/Compare.js\r\nimport React, { useState } from 'react';\r\nimport Navbar from '../Navbar';\r\n\r\nconst Compare = () => {\r\n  const [brand1, setBrand1] = useState('');\r\n  const [brand2, setBrand2] = useState('');\r\n  const [model1, setModel1] = useState('');\r\n  const [model2, setModel2] = useState('');\r\n  const [mileage1, setMileage1] = useState('');\r\n  const [mileage2, setMileage2] = useState('');\r\n  const [comparisonResult, setComparisonResult] = useState('');\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    loadCarMakes();\r\n});\r\n\r\nlet carMakes = [];\r\n\r\nasync function loadCarMakes() {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/api/cars');\r\n        const data = await response.json();\r\n\r\n        // Extract unique car makes using a Set\r\n        carMakes = [...new Set(data.map(car => car.make.toLowerCase()))];\r\n        console.log('Unique car makes loaded:', carMakes); // Debugging line\r\n    } catch (error) {\r\n        console.error('Error fetching car makes:', error);\r\n    }\r\n}\r\n\r\nfunction filterMakes(inputId) {\r\n    const input = document.getElementById(inputId);\r\n    const filter = input.value.toLowerCase();\r\n    const dropdown = document.getElementById(`dropdown${inputId.slice(-1)}`);\r\n    dropdown.innerHTML = '';\r\n\r\n    console.log('Filtering makes for:', filter); // Debugging line\r\n\r\n    // Filter car makes based on user input\r\n    const filteredMakes = carMakes.filter(make => make.includes(filter));\r\n\r\n    console.log('Filtered makes:', filteredMakes); // Debugging line\r\n    \r\n    // Clear dropdown before repopulating\r\n    dropdown.innerHTML = '';\r\n\r\n    // Populate dropdown with filtered makes\r\n    filteredMakes.forEach(make => {\r\n        const item = document.createElement('div');\r\n        item.className = 'dropdown-item';\r\n        item.textContent = capitalizeFirstLetter(make);\r\n        item.onclick = () => selectMake(inputId, make);\r\n        dropdown.appendChild(item);\r\n    });\r\n\r\n    if (filter === '') {\r\n        dropdown.innerHTML = '';\r\n    }\r\n}\r\n\r\nfunction selectMake(inputId, makeName) {\r\n    document.getElementById(inputId).value = capitalizeFirstLetter(makeName);\r\n    document.getElementById(`dropdown${inputId.slice(-1)}`).innerHTML = '';\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nasync function compareCars() {\r\n    const brand1 = document.getElementById('brand1').value.toLowerCase();\r\n    const brand2 = document.getElementById('brand2').value.toLowerCase();\r\n    const model1 = document.getElementById('model1').value.toLowerCase();\r\n    const model2 = document.getElementById('model2').value.toLowerCase();\r\n    const mileage1 = document.getElementById('mileage1').value;\r\n    const mileage2 = document.getElementById('mileage2').value;\r\n\r\n    try {\r\n        // Fetch car data\r\n        const response1 = await fetch(`http://localhost:3000/api/cars?make=${brand1}&model=${model1}`);\r\n        const response2 = await fetch(`http://localhost:3000/api/cars?make=${brand2}&model=${model2}`);\r\n        const data1 = await response1.json();\r\n        const data2 = await response2.json();\r\n\r\n        console.log('Car 1 data:', data1); // Debugging line\r\n        console.log('Car 2 data:', data2); // Debugging line\r\n\r\n        // Filter duplicates by brand and model before proceeding\r\n        const uniqueData1 = removeDuplicates(data1);\r\n        const uniqueData2 = removeDuplicates(data2);\r\n\r\n        if (uniqueData1.length && uniqueData2.length) {\r\n            const winner = compareCarData(uniqueData1[0], uniqueData2[0]);\r\n            displayComparison(winner, uniqueData1[0], uniqueData2[0]);\r\n        } else {\r\n            displayError(\"One or both cars were not found.\");\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching car data:', error);\r\n        displayError(\"Error fetching car data.\");\r\n    }\r\n}\r\n\r\n// Helper function to remove duplicates based on make and model\r\nfunction removeDuplicates(carArray) {\r\n    const seen = new Set();\r\n    return carArray.filter(car => {\r\n        const identifier = `${car.make.toLowerCase()}_${car.model.toLowerCase()}`;\r\n        if (seen.has(identifier)) {\r\n            return false;\r\n        } else {\r\n            seen.add(identifier);\r\n            return true;\r\n        }\r\n    });\r\n}\r\n\r\nfunction compareCarData(data1, data2) {\r\n    return data1.rating > data2.rating ? data1 : data2;\r\n}\r\n\r\nfunction displayComparison(winner, data1, data2) {\r\n    const resultDiv = document.getElementById('comparisonResult');\r\n    resultDiv.innerHTML = `\r\n        <h2>Comparison Result</h2>\r\n        <p>Car 1: ${data1.make} ${data1.model} - Mileage: ${data1.mileage} - Rating: ${data1.rating}</p>\r\n        <p>Car 2: ${data2.make} ${data2.model} - Mileage: ${data2.mileage} - Rating: ${data2.rating}</p>\r\n        <h3>Winner: ${winner.make} ${winner.model}</h3>\r\n    `;\r\n}\r\n\r\nfunction displayError(message) {\r\n    const resultDiv = document.getElementById('comparisonResult');\r\n    resultDiv.innerHTML = `<p style=\"color: red;\">${message}</p>`;\r\n}\r\n\r\nreturn (\r\n    <div>\r\n      <Navbar />\r\n      <div id=\"content\">\r\n        <h1>Car vs. Car</h1>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Car 1 Brand\"\r\n            value={brand1}\r\n            onChange={(e) => setBrand1(e.target.value)}\r\n          />\r\n          {/* Dropdown and other inputs here */}\r\n        </div>\r\n        {/* Add the rest of your JSX here */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compare;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}